<% layout("boilerplate") %>
    <div class="container">
      <h3>ðŸ”— URL Shortener</h3>
      <!-- Add Toast Container -->
      <div class="toast-container position-fixed bottom-0 end-0 p-3">
        <!-- Copy Toast -->
          <div id="copyToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="d-flex">
                  <div class="toast-body">
                      <i class="fas fa-check-circle me-2"></i>URL copied to clipboard!
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
          </div>
          <!-- Add Signup Success Toast -->
          <div id="signupToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="d-flex">
                  <div class="toast-body">
                      <i class="fas fa-check-circle me-2"></i>Account created successfully!
                  </div>
                  <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
              </div>
          </div>
          <!-- Login Success Toast -->
    <div id="loginToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                <i class="fas fa-check-circle me-2"></i>Login successful!
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
      </div>

      <% if (user) { %>
      <form id="url-form">
        <input type="url" id="full-url" placeholder="Enter full URL" required />
        <button type="submit">Shorten</button>
      </form>

      <div id="result" class="hidden">
        <p>
          Short URL:
          <a id="short-url" href="#" target="_blank"></a>
        </p>
        <button id="copy-btn">ðŸ“‹ Copy</button>

        <h3>ðŸ“± Or, scan the QR Code:</h3>
        <div id="outterQr">
          <div id="qrcode"></div>
        </div>
      </div>
         <% } else { %>
          <div class="text-center">
            <p class="mb-4">Please log in to shorten URLs</p>
            <a href="/login" class="btn btn-primary">Log In</a>
            <p class="mt-3">
                Don't have an account? 
                <a href="/signup" class="text-decoration-none">Sign up</a>
            </p>
        </div>
    <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.min.js"></script>
<script>
  

    const urlForm = document.getElementById("url-form");
    const fullUrlInput = document.getElementById("full-url");
    const resultDiv = document.getElementById("result");
    const shortUrlLink = document.getElementById("short-url");
    const copyBtn = document.getElementById("copy-btn");

    // Initialize QR Code
    const qrcode = new QRCode(document.getElementById("qrcode"), {
        text: window.location.origin,
        width: 128,
        height: 128
    });

    // Function to shorten URL
    async function shortenUrl(fullUrl) {
        try {
            const response = await fetch('/api/shorten', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ full: fullUrl })
            });

            if (response.status === 401) {
                window.location.href = '/login';
                return;
            }

            const data = await response.json();
            if (data.error) {
                throw new Error(data.error);
            }

            return `${window.location.origin}/${data.short}`;
        } catch (err) {
            console.error('Error shortening URL:', err);
            throw err;
        }
    }

    // Handle form submission
    urlForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        try {
            const fullUrl = fullUrlInput.value;
            const shortUrl = await shortenUrl(fullUrl);
            
            if (!shortUrl) return; // If no shortUrl returned, the user was redirected
            
            shortUrlLink.href = shortUrl;
            shortUrlLink.innerText = shortUrl;
            resultDiv.classList.remove("hidden");
            fullUrlInput.value = "";
            
            // Update QR code
            qrcode.clear();
            qrcode.makeCode(shortUrl);
        } catch (err) {
            alert("Error: " + (err.message || "Failed to shorten URL"));
        }
    });

    // Handle copy button click
    copyBtn.addEventListener("click", () => {
        const url = shortUrlLink.href;
        navigator.clipboard
            .writeText(url)
            .then(() => {
                const toast = new bootstrap.Toast(document.getElementById('copyToast'));
                toast.show();
            })
            .catch((err) => {
                console.error(err);
            });
    });

    // Check for signup success
    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('success') === 'true') {
            const toast = new bootstrap.Toast(document.getElementById('signupToast'));
            toast.show();
            window.history.replaceState({}, document.title, window.location.pathname);
        }
    });
</script>